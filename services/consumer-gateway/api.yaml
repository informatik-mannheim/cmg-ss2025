openapi: 3.1.1

info:
  title: API for the consumer gateway
  version: 1.0.0
  description: API for creating and monitoring a job

servers:
  - url: https://localhost:8080

paths: 
  /jobs:
    post: 
      summary: Create new Job
      description: Submits a new Job using image-id
      security:
        - bearerAuth: [] 
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                image_id:
                  type: string
                location:
                  type: string
              required:
                - image_id
      responses: 
        "201":
          description: Job successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: string
        "400":
          description: Bad request 
        "401":
          description: Unauthorized

  /jobs/{job-id}/status:
    get: 
      summary: Get the status of a job
      parameters:
        - name: job-id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses: 
        "200":
          description: Job status returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: string
                  status:
                    type: string
                    enum: [cancelled, queued, scheduled, running, completed, failed] 
                    # Queued: Jobs created by user, that are waiting for eval by job scheduler
                    # Scheduled: Jobs that have been evaluated and waiting for worker-execution

        "400":
          description: Bad request 
        "401":
          description: Unauthorized

  /auth/login:
    post: 
      summary: Forwards user login to user management
      description: User management returns JWT, user-id and role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses: 
        "200":
          description: Login successful, JWT issued
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "400":
          description: Bad request 
        "401":
          description: Unauthorized

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT