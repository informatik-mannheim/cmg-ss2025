openapi: 3.1.1

info:
  title: API for the consumer gateway
  version: 1.0.0
  description: API for creating and monitoring a job

servers:
  - url: https://localhost:8080

paths:
  /jobs:
      post:
        summary: Create new Job
        description: Submits a new Job using image-id, version, and parameters
        security:
          - bearerAuth: [ ]
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                required:
                  - image_id
                  - image_version
                  - parameters
                properties:
                  image_id:
                    type: string
                  image_version:
                    type: string
                  parameters:
                    type: object
                    additionalProperties:
                      type: string
        responses:
          "201":
            description: Job successfully created
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    job_id:
                      type: string
          "400":
            description: Bad request
          "401":
            description: Unauthorized

  /jobs/{job_id}/outcome:
    get:
      summary: Get the status of a job
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Job status returned
          content:
            application/json:
              schema:
                type: object
                required:
                  - job_id
                  - status
                properties:
                  job_id:
                    type: string
                  status:
                    type: string
                    enum: [queued, scheduled, running, completed, failed]
        "400":
          description: Bad request
        "401":
          description: Unauthorized

  /auth/login:
    post:
      summary: Forwards user secret to user management
      description: User management returns JWT, user-id and role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - secret
              properties:
                secret:
                  type: string
      responses:
        "200":
          description: Login successful, JWT issued
          content:
            application/json:
              schema:
                type: object
                required:
                  - token
                properties:
                  token:
                    type: string
        "400":
          description: Bad request
        "401":
          description: Unauthorized

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
