openapi: 3.0.0

servers:
  - url: http://localhost:8080
    description: Local development server

info:
  version: 1.0.0
  title: Worker Registry API
  description: The API for the Worker Registry

paths:
  /workers:
    get:
      tags:
        - worker
      description: Returns all registered workers or those with a specified status.
      operationId: getWorkers
      parameters:
        - name: status
          in: query
          description: Filter workers by their status. Comma-separated values allowed.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Registered workers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Worker'
              example:
                - workerId: "101a8fa4-dce6-4d10-a65a-e88e6edbcdf7"
                  workerStatus: "RUNNING"
                - workerId: "06842e74-1121-4700-b6d5-6558c8af6198"
                  workerStatus: "COMPLETED"
                - workerId: "06842e74-1121-4700-b6d5-6558c8af6199"
                  workerStatus: "AVAILABLE"
        '404':
          description: No workers found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "No workers found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "Internal server error"
  /worker:
    post:
      tags:
        - worker
      description: Registers a new Worker in the Worker Registry. Creates a unique Id and marks newly created worker as "AVAILABLE".
      operationId: saveWorker
      responses:
        '201':
          description: Worker successfully saved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worker'
              example:
                workerId: "90bb1e74-22f1-4b91-bf0b-fd17e542cb3e"
                workerStatus: "AVAILABLE"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "Internal server error"

  /worker/status:
    get:
      tags:
        - worker
      description: Retrieves the status of the specified worker.
      operationId: getWorkerStatus
      parameters:
        - name: workerId
          in: query
          description: The identifier of the worker.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Worker status retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  workerStatus:
                    type: string
                    enum:
                      - AVAILABLE
                      - RUNNING
                      - COMPLETED
              example:
                workerStatus: "AVAILABLE"
        '404':
          description: Worker was not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "Worker not found"

    patch:
      tags:
        - worker
      description: Updates the status of a specific worker to "AVAILABLE", "RUNNING" or "COMPLETED".
      operationId: updateWorkerStatus
      parameters:
        - name: workerId
          in: query
          description: The identifier of the worker.
          required: true
          schema:
            type: string
            format: uuid
        - name: status
          in: query
          description: The new status for the worker.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Worker status updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worker'
              example:
                workerId: "101a8fa4-dce6-4d10-a65a-e88e6edbcdf7"
                workerStatus: "RUNNING"
        '404':
          description: Worker was not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "Worker not found"
        '400':
          description: Invalid worker status provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "Invalid value for workerStatus. Allowed values are 'AVAILABLE', 'RUNNING' or 'COMPLETED'."

components:
  schemas:
    Worker:
      type: object
      description: Worker details
      properties:
        workerId:
          type: string
          format: uuid
        workerStatus:
          type: string
          enum:
            - AVAILABLE
            - RUNNING
            - COMPLETED
      example:
        workerId: "101a8fa4-dce6-4d10-a65a-e88e6edbcdf7"
        workerStatus: "RUNNING"
