openapi: 3.0.0

servers:
  - url: http://localhost:8080
    description: Local development server

info:
  version: 1.0.0
  title: Worker Registry API
  description: The API for the Worker Registry

paths:
  /workers:
    get:
      tags:
        - workers
      description: Returns all registered workers or those with a specified status.
      operationId: getWorkers
      parameters:
        - name: status
          in: query
          description: Filter workers by their status. Comma-separated values allowed.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Registered workers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Worker'
              example:
                - workerId: "101a8fa4-dce6-4d10-a65a-e88e6edbcdf7"
                  workerStatus: "RUNNING"
                - workerId: "06842e74-1121-4700-b6d5-6558c8af6198"
                  workerStatus: "COMPLETED"
                - workerId: "06842e74-1121-4700-b6d5-6558c8af6199"
                  workerStatus: "AVAILABLE"
        '404':
          description: No workers found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: "No workers found."

    post:
      tags:
        - workers
      description: Registers a new Worker in the Worker Registry. Creates a unique Id and marks newly created worker as "AVAILABLE".
      operationId: saveWorker
      responses:
        '201':
          description: Worker successfully saved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worker'
              example:
                workerId: "90bb1e74-22f1-4b91-bf0b-fd17e542cb3e"
                workerStatus: "AVAILABLE"
        '400':
          description: Worker could not be saved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: "Worker could not be saved."      

  /workers/{workerId}:
    get:
      tags:
        - workers
      description: Retrieves a worker by their ID.
      operationId: getWorkerById
      parameters:
        - name: workerId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Worker retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worker'
        '404':
          description: Worker not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: "Worker not found."
                
    patch:
      tags:
        - workers
      description: Updates a specific worker. Valid workerStatus values are "AVAILABLE", "RUNNING" or "COMPLETED".
      operationId: updateWorkerStatus
      parameters:
        - name: workerId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                workerStatus:
                  type: string
                  enum: [AVAILABLE, RUNNING, COMPLETED]
      responses:
        '200':
          description: Worker status updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worker'
        '400':
          description: Invalid worker status provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: "Invalid Requestbody."
        '404':
          description: Worker not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: "Worker not found."

components:
  schemas:
    Worker:
      type: object
      description: Worker details
      properties:
        workerId:
          type: string
          format: uuid
        workerStatus:
          type: string
          enum:
            - AVAILABLE
            - RUNNING
            - COMPLETED
      required:
        - workerId
        - workerStatus

    Error:
      type: object
      properties:
        message:
          type: string
