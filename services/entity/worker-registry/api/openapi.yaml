openapi: 3.0.0

servers:
  - url: http://localhost:8080
    description: Local development server

info:
  version: 1.0.0
  title: Worker Registry API
  description: The API for the Worker Registry
paths:
  /worker:
    get:
      tags:
        - worker
      description: Returns all registered workers.
      operationId: getAllWorkers
      responses:
        '200':
          description: All registered workers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Worker'
              example:
                - workerId: "101a8fa4-dce6-4d10-a65a-e88e6edbcdf7"
                  workerName: "Worker 1"
                  workerStatus: "Running"
                - workerId: "06842e74-1121-4700-b6d5-6558c8af6198"
                  workerName: "Worker 2"
                  workerStatus: "Stopped"
        '500':
            description: "Internal server error"
    post:
      tags:
        - worker
      description: Saves a new Worker in the Worker Registry.
      operationId: saveWorker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewWorker'
            example:
              workerName: "Worker 1"
              workerStatus: "Running"
      responses:
        '201':
          description: Worker successfully saved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worker'
              example:
                workerId: "90bb1e74-22f1-4b91-bf0b-fd17e542cb3e"
                workerName: "Worker 1"
                workerStatus: "Running"
        '400':
          description: Worker could not be saved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Worker does already exist or cannot be saved."

  /worker/{workerId}:
    get:
      tags:
        - worker
      description: Returns the worker with the specified workerId
      operationId: getWorkerById
      parameters:
        - name: workerId
          in: path
          description: The identifier of the worker.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A single worker
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worker'
              example:
                workerId: "101a8fa4-dce6-4d10-a65a-e88e6edbcdf7"
                workerName: "Worker 1"
                workerStatus: "Running"
        '404':
          description: Worker was not found.

  /worker/{workerId}/status:
    get:
      tags:
        - worker
      description: Retrieves the status of the specified worker.
      operationId: getWorkerStatus
      parameters:
        - name: workerId
          in: path
          description: The identifier of the worker.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Worker status retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  workerStatus:
                    type: string
                    enum:
                      - Running
                      - Stopped
              example:
                workerStatus: "Running"
        '404':
          description: Worker was not found.

    patch:
      tags:
        - worker
      description: Updates the status of a specific worker to "Running" or "Stopped".
      operationId: updateWorkerStatus
      parameters:
        - name: workerId
          in: path
          description: The identifier of the worker.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                workerStatus:
                  type: string
                  enum:
                    - Running
                    - Stopped
              required:
                - workerStatus
            example:
              workerStatus: "Running"
      responses:
        '200':
          description: Worker status updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worker'
              example:
                workerId: "101a8fa4-dce6-4d10-a65a-e88e6edbcdf7"
                workerName: "Worker 1"
                workerStatus: "Running"
        '404':
          description: Worker was not found.
        '400':
          description: Invalid worker status provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid value for workerStatus. Allowed values are 'Running' or 'Stopped'."

components:
  schemas:
    Worker:
      type: object
      description: Worker details
      properties:
        workerId:
          type: string
          format: uuid
        workerName:
          type: string
        workerStatus:
          type: string
      example:
        workerId: "101a8fa4-dce6-4d10-a65a-e88e6edbcdf7"
        workerName: "Worker 1"
        workerStatus: "Running"
    NewWorker:
      type: object
      description: Payload to create a new worker
      required:
        - workerName
        - workerStatus
      properties:
        workerName:
          type: string
        workerStatus:
          type: string