openapi: 3.0.3
info:
  title: Job Microservice API
  description: API which handles Informations of assigned Consumer-Jobs in a Queue
  version: .0.0
servers:
  - url: http://127.0.0.1:25555
    description: Job-Microservice
paths:
  /jobs:
    get:
      summary: Get jobs
      description: Retrieve a list of jobs with optional filtering.
      parameters:
        - name: status
          in: query
          required: false
          description: Filter jobs by status
          schema:
            type: string
            enum: [queued, running, completed, failed, cancelled]
        - name: userId
          in: query
          required: false
          description: Filter jobs by user ID
          schema:
            type: string
        - name: priority
          in: query
          required: false
          description: Filter jobs by priority
          schema:
            type: integer
            enum: [0, 1, 2]
        - name: imageId
          in: query
          required: false
          description: Filter jobs by image ID
          schema:
            type: string
      responses:
        200:
          description: A list of jobs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
    post:
      summary: Create a new job
      description: Add a new job to the queue.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobCreate'
      responses:
        201:
          description: Job created successfully
  /jobs/{jobId}:
    put:
      summary: Update a job
      description: Update an existing job identified by its ID.
      parameters:
        - name: jobId
          in: path
          required: true
          description: The ID of the job to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobUpdate'
      responses:
        200:
          description: Job updated successfully
    delete:
      summary: Delete a job
      description: Delete a job identified by its ID.
      parameters:
        - name: jobId
          in: path
          required: true
          description: The ID of the job to delete
          schema:
            type: string
      responses:
        204:
          description: Job deleted successfully
components:
  schemas:
    Job:
      type: object
      properties:
        jobId:
          type: string
        jobName:
          type: string
        userId:
          type: string
        imageId:
          type: string
        imageName:
          type: string
        imageVersion:
          type: string
        parameters:
          type: array
          items:
            type: string
        priority:
          type: integer
          enum: [0, 1, 2]
        status:
          type: string
          enum: [queued, running, completed, failed, cancelled]
        createdAt:
          type: string
          format: date-time
        workerId:
          type: string
          nullable: true
        errorMessage:
          type: string
          nullable: true
        computeLocation:
          type: string
          nullable: true
        carbonItensity:
          type: integer
          nullable: true
        constraints:
          $ref: '#/components/schemas/JobConstraints'
        result:
          type: string
          nullable: true
        maxRetries:
          type: integer
        startedAt:
          type: string
          format: date-time
          nullable: true
        completedAt:
          type: string
          format: date-time
          nullable: true
        lastUpdatedAt:
          type: string
          format: date-time
    JobCreate:
      type: object
      required:
        - userId
        - imageId
        - imageName
        - imageVersion
        - parameters
        - priority
      properties:
        userId:
          type: string
        imageId:
          type: string
        imageName:
          type: string
        imageVersion:
          type: string
        parameters:
          type: array
          items:
            type: string
        priority:
          type: integer
          enum: [0, 1, 2]
    JobUpdate:
      type: object
      properties:
        imageId:
          type: string
        imageName:
          type: string
        imageVersion:
          type: string
        parameters:
          type: array
          items:
            type: string
        priority:
          type: integer
          enum: [0, 1, 2]
    JobConstraints:
      type: object
      properties:
        maxRuntime:
          type: integer
        preferredLocation:
          type: array
          items:
            type: string