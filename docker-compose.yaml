services:
  job-scheduler:
    build:
      context: ./services/job-scheduler
      dockerfile: Dockerfile
    container_name: job-scheduler
    environment:
      - WORKER_REGISTRY=http://worker-registry:8080
      - JOB_SERVICE=http://job-service:8080
      - CARBON_INTENSITY_PROVIDER=http://carbon-intensity-provider:8080
      - JOB_SCHEDULER_INTERVAL=5
      - LOG_LEVEL=debug
      - USER_MANAGEMENT_URL=http://user-management:8080
      - AUTH_TOKEN="something to test, will probably need to be adjusted soon"
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318
      - JOB_SCHEDULER_SECRET="Some really secure secret"
    expose:
      - 8080
    networks:
      - private_network
    restart: unless-stopped

  worker-registry:
    build:
      context: ./services/worker-registry
      dockerfile: Dockerfile
    container_name: worker-registry
    depends_on:
      - postgres
    environment:
      - CARBON_INTENSITY_PROVIDER=http://carbon-intensity-provider:8080
      - LOG_LEVEL=debug
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=test
      - DB_PASSWORD=test
      - DB_NAME=test
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318
      - JWKS_URL=https://dev-jqhwcu7xuwgdqi56.eu.auth0.com/.well-known/jwks.json
      - SSL_REQUIRED=false
    expose:
      - 8080
    networks:
      - private_network
    restart: unless-stopped

  job-service:
    build:
      context: ./services/job
      dockerfile: Dockerfile
    container_name: job-service
    environment:
      - JOB_REPO_TYPE=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=test
      - DB_PASSWORD=test
      - DB_NAME=test
      - SSL_MODE=false
      - OTEL_EXPORTER_OTLP_ENDPOINT="http://jaeger:4318/"
      - LOG_LEVEL=debug
    expose:
      - 8080
    ports:
      - "127.0.0.1:8089:8080"
    depends_on:
      - postgres
    networks:
      - private_network
    restart: unless-stopped

  carbon-intensity-provider:
    build:
      context: ./services/carbon-intensity-provider
      dockerfile: Dockerfile
    container_name: carbon-intensity-provider
    environment:
      - USE_LIVE=false
      - LOG_LEVEL=debug
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318
      - JWKS_URL=https://dev-jqhwcu7xuwgdqi56.eu.auth0.com/.well-known/jwks.json
    expose:
      - 8080
    networks:
      - private_network
    restart: unless-stopped

  worker-gateway:
    build:
      context: .
      dockerfile: ./services/worker-gateway/Dockerfile
    container_name: worker-gateway
    environment:
      - WORKER_REGISTRY=http://worker-registry:8080
      - JOB_SERVICE=http://job-service:8080
      - LOG_LEVEL=debug
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318
      - JWKS_URL=https://dev-jqhwcu7xuwgdqi56.eu.auth0.com/.well-known/jwks.json
    expose:
      - 8080
    networks:
      - private_network
    restart: unless-stopped

  consumer-gateway:
    build:
      context: .
      dockerfile: ./services/consumer-gateway/Dockerfile
    container_name: consumer-gateway
    environment:
      - JOB_SERVICE=http://job-service:8080
      - USER_MANAGEMENT_SERVICE=http://user-management:8080
      - CARBON_INTENSITY_PROVIDER=http://carbon-intensity-provider:8080
      - LOG_LEVEL=debug
      - JWKS_URL=https://dev-jqhwcu7xuwgdqi56.eu.auth0.com/.well-known/jwks.json
    expose:
      - 8080
    ports:
      - "8080:8080"
    networks:
      - private_network
    restart: unless-stopped

  user-management:
    build:
      context: ./services/user-management
      dockerfile: Dockerfile
    container_name: user-management
    environment:
      USE_LIVE: "true"
      AUTH0_TOKEN_URL: "https://dev-jqhwcu7xuwgdqi56.eu.auth0.com/oauth/token"
      JWT_AUDIENCE: "https://green-load-shifting-platform/"
      ADMIN_SECRET_HASH: "da359894a57a42c65efa8b98c8c86f3f974ff2c8dd7fc428fd87ce6ecdc40bd7"
      LOG_LEVEL: debug
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://jaeger:4318"
    expose:
      - 8080
    ports:
      - "8081:8080"
    networks:
      - private_network
    restart: unless-stopped

  jaeger:
    image: jaegertracing/jaeger:latest
    networks:
      - private_network
    expose:
      - 4318 # OTLP HTTP receiver
    ports:
      - "16686:16686" # Jaeger UI

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: test
    expose:
      - 5432
    ports:
      - "5432:5432"
    networks:
      - private_network
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database:/docker-entrypoint-initdb.d

networks:
  private_network:

volumes:
  postgres-data:
